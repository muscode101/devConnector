[{"/home/muscode/WebstormProjects/devConnector/client/src/store.js":"1","/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Landing.js":"2","/home/muscode/WebstormProjects/devConnector/client/src/component/auth/Login.js":"3","/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/CreateProfile.js":"4","/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/AddExperience.js":"5","/home/muscode/WebstormProjects/devConnector/client/src/component/post/Post.js":"6","/home/muscode/WebstormProjects/devConnector/client/src/actions/profile.js":"7","/home/muscode/WebstormProjects/devConnector/client/src/component/posts/PostItem.js":"8","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileEducation.js":"9","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileAbout.js":"10","/home/muscode/WebstormProjects/devConnector/client/src/reducers/index.js":"11","/home/muscode/WebstormProjects/devConnector/client/src/reducers/alert.js":"12","/home/muscode/WebstormProjects/devConnector/client/src/reducers/post.js":"13","/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Alert.js":"14","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/Profile.js":"15","/home/muscode/WebstormProjects/devConnector/client/src/actions/types.js":"16","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/DashboardActions.js":"17","/home/muscode/WebstormProjects/devConnector/client/src/component/post/CommentItem.js":"18","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileGithub.js":"19","/home/muscode/WebstormProjects/devConnector/client/src/reducers/auth.js":"20","/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Navbar.js":"21","/home/muscode/WebstormProjects/devConnector/client/src/component/profiles/Profiles.js":"22","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Education.js":"23","/home/muscode/WebstormProjects/devConnector/client/src/component/posts/PostForm.js":"24","/home/muscode/WebstormProjects/devConnector/client/src/component/profiles/ProfileItem.js":"25","/home/muscode/WebstormProjects/devConnector/client/src/reducers/profile.js":"26","/home/muscode/WebstormProjects/devConnector/client/src/index.js":"27","/home/muscode/WebstormProjects/devConnector/client/src/actions/auth.js":"28","/home/muscode/WebstormProjects/devConnector/client/src/component/auth/Register.js":"29","/home/muscode/WebstormProjects/devConnector/client/src/component/routes/PrivateRoute.js":"30","/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/EditProfile.js":"31","/home/muscode/WebstormProjects/devConnector/client/src/component/Spinner.js":"32","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Experience.js":"33","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileTop.js":"34","/home/muscode/WebstormProjects/devConnector/client/src/util/setAuthToken.js":"35","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Dashboard.js":"36","/home/muscode/WebstormProjects/devConnector/client/src/component/posts/Posts.js":"37","/home/muscode/WebstormProjects/devConnector/client/src/actions/alert.js":"38","/home/muscode/WebstormProjects/devConnector/client/src/component/post/CommentForm.js":"39","/home/muscode/WebstormProjects/devConnector/client/src/actions/post.js":"40","/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/AddEducation.js":"41","/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileExperience.js":"42","/home/muscode/WebstormProjects/devConnector/client/src/App.js":"43"},{"size":379,"mtime":1607832307952,"results":"44","hashOfConfig":"45"},{"size":1211,"mtime":1612015951818,"results":"46","hashOfConfig":"45"},{"size":2135,"mtime":1607951931513,"results":"47","hashOfConfig":"45"},{"size":6747,"mtime":1609267054710,"results":"48","hashOfConfig":"45"},{"size":2927,"mtime":1608971467743,"results":"49","hashOfConfig":"45"},{"size":1035,"mtime":1611644590038,"results":"50","hashOfConfig":"45"},{"size":6035,"mtime":1612021136052,"results":"51","hashOfConfig":"45"},{"size":2993,"mtime":1611557556998,"results":"52","hashOfConfig":"45"},{"size":682,"mtime":1610432913631,"results":"53","hashOfConfig":"45"},{"size":884,"mtime":1610178469410,"results":"54","hashOfConfig":"45"},{"size":209,"mtime":1610964690930,"results":"55","hashOfConfig":"45"},{"size":397,"mtime":1607834644093,"results":"56","hashOfConfig":"45"},{"size":1949,"mtime":1611583172070,"results":"57","hashOfConfig":"45"},{"size":523,"mtime":1607850005027,"results":"58","hashOfConfig":"45"},{"size":3910,"mtime":1610433979946,"results":"59","hashOfConfig":"45"},{"size":995,"mtime":1611582932617,"results":"60","hashOfConfig":"45"},{"size":669,"mtime":1608538782868,"results":"61","hashOfConfig":"45"},{"size":1619,"mtime":1611644781959,"results":"62","hashOfConfig":"45"},{"size":2020,"mtime":1610434236319,"results":"63","hashOfConfig":"45"},{"size":1279,"mtime":1609046800067,"results":"64","hashOfConfig":"45"},{"size":1745,"mtime":1610966315755,"results":"65","hashOfConfig":"45"},{"size":1623,"mtime":1612018242881,"results":"66","hashOfConfig":"45"},{"size":1540,"mtime":1611993473046,"results":"67","hashOfConfig":"45"},{"size":1067,"mtime":1611641409365,"results":"68","hashOfConfig":"45"},{"size":1381,"mtime":1611299806980,"results":"69","hashOfConfig":"45"},{"size":1266,"mtime":1609565873088,"results":"70","hashOfConfig":"45"},{"size":206,"mtime":1607748766518,"results":"71","hashOfConfig":"45"},{"size":2393,"mtime":1612021201941,"results":"72","hashOfConfig":"45"},{"size":3144,"mtime":1607952178536,"results":"73","hashOfConfig":"45"},{"size":628,"mtime":1608008417410,"results":"74","hashOfConfig":"45"},{"size":7959,"mtime":1609577551327,"results":"75","hashOfConfig":"45"},{"size":341,"mtime":1612018920625,"results":"76","hashOfConfig":"45"},{"size":1559,"mtime":1611993613473,"results":"77","hashOfConfig":"45"},{"size":2652,"mtime":1611299642985,"results":"78","hashOfConfig":"45"},{"size":236,"mtime":1608180132690,"results":"79","hashOfConfig":"45"},{"size":2049,"mtime":1612019282989,"results":"80","hashOfConfig":"45"},{"size":1119,"mtime":1611999847374,"results":"81","hashOfConfig":"45"},{"size":382,"mtime":1607850358393,"results":"82","hashOfConfig":"45"},{"size":1159,"mtime":1611644781915,"results":"83","hashOfConfig":"45"},{"size":3793,"mtime":1612021201985,"results":"84","hashOfConfig":"45"},{"size":3313,"mtime":1608996283285,"results":"85","hashOfConfig":"45"},{"size":687,"mtime":1610432913707,"results":"86","hashOfConfig":"45"},{"size":2706,"mtime":1611556907468,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1evateh",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/muscode/WebstormProjects/devConnector/client/src/store.js",[],["191","192"],"/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Landing.js",[],["193","194"],"/home/muscode/WebstormProjects/devConnector/client/src/component/auth/Login.js",[],["195","196"],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/CreateProfile.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/AddExperience.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/post/Post.js",["197"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\";\nimport {getPost} from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport Spinner from \"../Spinner\";\nimport {Link} from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n\n    useEffect(() =>\n            getPost(match.params.id)\n        , [])\n\n    return loading || !post?._id ? <Spinner/> :\n        <Fragment>\n            <Link to='/posts' className='btn'>Back to Posts</Link>\n            <PostItem post={post}/>\n            <CommentForm postId={post?._id}/>\n            {post.comments.map(comment =>\n                <CommentItem comment={comment} key={comment?._id} postId={post?._id}/>)}\n        </Fragment>\n}\n\nPost.prototype = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\nexport default connect(state => ({post: state.post}), {getPost})(Post)",["198","199"],"/home/muscode/WebstormProjects/devConnector/client/src/actions/profile.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/posts/PostItem.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileEducation.js",[],["200","201"],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileAbout.js",[],["202","203"],"/home/muscode/WebstormProjects/devConnector/client/src/reducers/index.js",[],["204","205"],"/home/muscode/WebstormProjects/devConnector/client/src/reducers/alert.js",["206"],"import {REMOVE_ALERT, SET_ALERT} from \"../actions/types\";\n\nconst initialState = []\nexport default function (state = initialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload)\n        default:\n            return state\n    }\n}","/home/muscode/WebstormProjects/devConnector/client/src/reducers/post.js",["207"],"import {\n    ADD_COMMENT,\n    ADD_POST,\n    DELETE_POST,\n    GET_POST,\n    GET_POSTS,\n    POST_ERROR,\n    REMOVE_COMMENT,\n    UPDATE_LIKES\n} from '../actions/types'\n\nconst initialState = [{\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n}]\n\nexport default (state = initialState, action) => {\n    const {type, payload} = action\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n                ...state,\n\n                posts: state.posts.map(\n                    post => post._id === payload.id ? {\n                        ...post,\n                        likes: payload.likes\n                    } : post),\n                loading: false\n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: payload},\n                loading: false\n            }\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: state.post.comments.filter(comment => comment._id !== payload),},\n                loading: false\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        default:\n            return state\n    }\n}","/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Alert.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/Profile.js",["208"],"import React, {Fragment, useEffect} from 'react'\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getProfileById} from \"../../actions/profile\";\nimport Spinner from \"../Spinner\";\nimport {Link} from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\n\n\nconst Profile = ({match, getProfileById, profile: {profile, loading}, auth}) => {\n    useEffect(() => {\n        getProfileById(match.params.id)\n    }, [getProfileById])\n\n\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner/> :\n                <Fragment>\n                    <Link to='/profiles' className='btn btn-light'>Back to Profiles</Link>\n                    {\n                        auth.isAuthenticated &&\n                        auth.loading === false &&\n                        auth.user._id === profile.user._id &&\n                        (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile </Link>)\n                    }\n                    <div className='profile-grid my-1'>\n                        <ProfileTop profile={profile}/>\n                        <ProfileAbout profile={profile}/>\n                        <div className='profile-exp bg-white p-2'>\n                            <h2 className=\"text-primary\">Experience</h2>\n                            <div>\n                                {profile.experience.length > 0 ? (\n                                        <Fragment>\n                                            {\n                                                profile.experience.map(experience =>\n                                                    <ProfileExperience\n                                                        key={experience._id}\n                                                        experience={experience}/>\n                                                )\n                                            }\n                                        </Fragment>\n                                    ) :\n                                    (<h4>No experience</h4>)}\n\n                            </div>\n                        </div>\n                        <div className='profile-edu bg-white p-2'>\n                            <h2 className=\"text-primary\">Education</h2>\n                            <div>\n                                {profile.education.length > 0 ? (\n                                        <Fragment>\n                                            {\n                                                profile.experience.map(education =>\n                                                    <ProfileEducation\n                                                        key={education._id}\n                                                        education={education}/>\n                                                )\n                                            }\n                                        </Fragment>\n                                    ) :\n                                    (<h4>No education</h4>)}\n                            </div>\n                            {\n                                profile.githubusername && (\n                                    <ProfileGithub username = {profile.githubusername}/>\n                                )\n                            }\n                        </div>\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    )\n}\n\nProfile.prototype = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)","/home/muscode/WebstormProjects/devConnector/client/src/actions/types.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/DashboardActions.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/post/CommentItem.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileGithub.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/reducers/auth.js",["209"],"import {\n    ACCOUNT_DELETED,\n    AUTH_FAIL,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED\n} from \"../actions/types\";\n\nconst initialState = [{\n    token: localStorage.token,\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}]\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            localStorage.setItem('token', payload.token)\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        }\n        case AUTH_FAIL:\n        case ACCOUNT_DELETED:\n        case LOGOUT:\n        case LOGIN_FAIL:\n        case REGISTER_FAIL: {\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        }\n        default:\n            return state\n    }\n}",["210","211"],"/home/muscode/WebstormProjects/devConnector/client/src/component/layout/Navbar.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profiles/Profiles.js",["212","213"],"import React, {Fragment, useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {getProfiles} from \"../../actions/profile\";\nimport Spinner from \"../Spinner\";\nimport ProfileItem from \"./ProfileItem\";\n\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\n\n    const [myProfiles, setMyProfiles] = useState([])\n\n    useEffect(() => {\n            getProfiles()\n            setMyProfiles(profiles)\n        }\n        , [getProfiles])\n\n\n    const loadProfiles = () => {\n        if (loading === false && profiles !== [])\n            return profiles ? profiles?.map(\n                profile => <ProfileItem key={profile?._id} profile={profile}/>\n            ) : <h4>No profiles found...</h4>\n    }\n\n    return (\n        <Fragment>\n            {\n                loading ? <Spinner/> : (\n                    <Fragment>\n                        <h1 className='large text-primary'>Developers</h1>\n                        <p className='lead'>\n                            <i className='fab fa-connectdevelop'/>\n                            Browse and connect with developers\n                        </p>\n                        <dev className='profiles'>\n                            {loadProfiles()}\n                        </dev>\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Education.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/posts/PostForm.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profiles/ProfileItem.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/reducers/profile.js",["214"],"/home/muscode/WebstormProjects/devConnector/client/src/index.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/actions/auth.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/auth/Register.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/routes/PrivateRoute.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/EditProfile.js",["215"],"import React, {Fragment, useEffect, useState} from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {createProfile, getProfile} from \"../../actions/profile\";\nimport PropTypes from 'prop-types'\nimport {connect} from \"react-redux\";\n\nconst EditProfile = ({profile: {loading, profile,}, createProfile, getProfile, history}) => {\n    const [formData, setFormData] = useState({\n        bio: '',\n        status: '',\n        skills: '',\n        company: '',\n        twitter: '',\n        website: '',\n        youtube: '',\n        linkedin: '',\n        facebook: '',\n        location: '',\n        instagram: '',\n        githubusername: ''\n    })\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n    const {\n        bio,\n        status,\n        skills,\n        company,\n        twitter,\n        website,\n        youtube,\n        linkedin,\n        facebook,\n        location,\n        instagram,\n        githubusername\n    } = formData\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n    const onSubmit = e => {\n        e.preventDefault()\n        createProfile({formData,history, edit:true})\n    }\n    useEffect(() => {\n        getProfile()\n        setFormData({\n            bio: loading || !profile.bio ? '' : profile.bio,\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n        })\n    },[loading,getProfile])\n\n\n    return <Fragment>\n        <h1 className=\"large text-primary\">\n            Create Your Profile\n        </h1>\n        <p className=\"lead\">\n            <i className=\"fas fa-user\"/>\n            Let's get some information to make your profile stand out\n        </p>\n        <small>* = required field</small>\n        <form className=\"form\" onSubmit={e => onSubmit(e)}>\n            <div className=\"form-group\">\n                <select value={status} name=\"status\" onChange={e => onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\">\n                    Give us an idea of where you are at in your career\n                </small>\n            </div>\n            <div className=\"form-group\">\n                <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Company\" value={company} name=\"company\"/>\n                <small className=\"form-text\">\n                    Could be your own company or one you work for\n                </small>\n            </div>\n            <div className=\"form-group\">\n                <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Website\" value={website} name=\"website\"/>\n                <small className=\"form-text\">\n                    Could be your own or a company website\n                </small>\n            </div>\n            <div className=\"form-group\">\n                <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Location\" value={location} name=\"location\"/>\n                <small className=\"form-text\"\n                >City & state suggested (eg. Boston, MA)</small>\n            </div>\n            <div className=\"form-group\">\n                <input onChange={e => onChange(e)} type=\"text\" placeholder=\"* Skills\" value={skills} name=\"skills\"/>\n                <small className=\"form-text\">\n                    Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)\n                </small>\n            </div>\n            <div className=\"form-group\">\n                <input\n                    onChange={e => onChange(e)}\n                    type=\"text\"\n                    value={githubusername}\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                />\n                <small className=\"form-text\"\n                >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n            </div>\n            <div className=\"form-group\">\n                <textarea onChange={e => onChange(e)} placeholder=\"A short bio of yourself\" value={bio} name=\"bio\"/>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n            </div>\n\n            <div className=\"my-2\">\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\"\n                        className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n            </div>\n\n            {displaySocialInputs &&\n            <Fragment>\n                <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"/>\n                    <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Twitter URL\" value={twitter}\n                           name=\"twitter\"/>\n                </div>\n\n                <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"/>\n                    <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Facebook URL\" value={facebook}\n                           name=\"facebook\"/>\n                </div>\n\n                <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"/>\n                    <input onChange={e => onChange(e)} type=\"text\" placeholder=\"YouTube URL\" value={youtube}\n                           name=\"youtube\"/>\n                </div>\n\n                <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"/>\n                    <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Linkedin URL\" value={linkedin}\n                           name=\"linkedin\"/>\n                </div>\n\n                <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"/>\n                    <input onChange={e => onChange(e)} type=\"text\" placeholder=\"Instagram URL\" value={instagram}\n                           name=\"instagram\"/>\n                </div>\n            </Fragment>\n            }\n\n            <input onChange={e => onChange(e)} type=\"submit\" className=\"btn btn-primary my-1\"/>\n            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n        </form>\n    </Fragment>\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {createProfile, getProfile})(withRouter(EditProfile))","/home/muscode/WebstormProjects/devConnector/client/src/component/Spinner.js",["216"],"import React, {Fragment} from \"react\";\n\nconst style = {\n    width: '80px',\n    height: '80px',\n    border: '0',\n    marginLeft: '50%',\n    marginTop: '30%',\n    display: 'flex',\n    position: 'relative'\n}\n\nexport default () => (\n    <Fragment>\n        <p\n            className=\"spinner\"\n            style={style}\n        />\n    </Fragment>\n)","/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Experience.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileTop.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/util/setAuthToken.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/dashboard/Dashboard.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/posts/Posts.js",["217"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from \"../Spinner\";\nimport {getPosts} from \"../../actions/post\";\nimport {connect} from \"react-redux\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\n\n\nconst Posts = ({getPosts, post: {posts, loading}}) => {\n    useEffect(() =>\n            getPosts(),\n        [getPosts]\n    )\n\n    return loading ? <Spinner/> : (\n        <Fragment>\n            <h1 className='large text-primary'>Posts</h1>\n            <p className='lead'>\n                <i className='fas fa-user'/> Welcome to the community\n            </p>\n            <PostForm/>\n            <div className='posts'>\n                { posts && posts?.map(post =>{\n                    return <PostItem key={post._id} post={post}/>}\n                )}\n            </div>\n        </Fragment>\n    )\n}\n\nfunction isEmpty(value) {\n    return (value == null || value === '');\n}\n\nPosts.prototype = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nexport default connect(state => ({post: state.post}), {getPosts})(Posts)","/home/muscode/WebstormProjects/devConnector/client/src/actions/alert.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/post/CommentForm.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/actions/post.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile-forms/AddEducation.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/component/profile/ProfileExperience.js",[],"/home/muscode/WebstormProjects/devConnector/client/src/App.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"218","replacedBy":"222"},{"ruleId":"220","replacedBy":"223"},{"ruleId":"218","replacedBy":"224"},{"ruleId":"220","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":15,"column":11,"nodeType":"228","endLine":15,"endColumn":13,"suggestions":"229"},{"ruleId":"218","replacedBy":"230"},{"ruleId":"220","replacedBy":"231"},{"ruleId":"218","replacedBy":"232"},{"ruleId":"220","replacedBy":"233"},{"ruleId":"218","replacedBy":"234"},{"ruleId":"220","replacedBy":"235"},{"ruleId":"218","replacedBy":"236"},{"ruleId":"220","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":4,"column":1,"nodeType":"240","endLine":14,"endColumn":2},{"ruleId":"238","severity":1,"message":"241","line":19,"column":1,"nodeType":"240","endLine":79,"endColumn":2},{"ruleId":"226","severity":1,"message":"242","line":17,"column":8,"nodeType":"228","endLine":17,"endColumn":24,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"239","line":19,"column":1,"nodeType":"240","endLine":55,"endColumn":2},{"ruleId":"218","replacedBy":"244"},{"ruleId":"220","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":10,"column":12,"nodeType":"248","messageId":"249","endLine":10,"endColumn":22},{"ruleId":"226","severity":1,"message":"250","line":16,"column":11,"nodeType":"228","endLine":16,"endColumn":24,"suggestions":"251"},{"ruleId":"238","severity":1,"message":"239","line":11,"column":1,"nodeType":"240","endLine":51,"endColumn":2},{"ruleId":"226","severity":1,"message":"252","line":60,"column":7,"nodeType":"228","endLine":60,"endColumn":27,"suggestions":"253"},{"ruleId":"238","severity":1,"message":"241","line":13,"column":1,"nodeType":"240","endLine":20,"endColumn":2},{"ruleId":"246","severity":1,"message":"254","line":32,"column":10,"nodeType":"248","messageId":"249","endLine":32,"endColumn":17},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],["255"],["256"],["255"],["256"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPost' and 'match.params.id'. Either include them or remove the dependency array. If 'getPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["257"],["255"],["256"],["255"],["256"],["255"],["256"],["255"],["256"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["258"],["255"],["256"],"no-unused-vars","'myProfiles' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'profiles'. Either include it or remove the dependency array. If 'setMyProfiles' needs the current value of 'profiles', you can also switch to useReducer instead of useState and read 'profiles' in the reducer.",["259"],"React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.bio', you can also switch to useReducer instead of useState and read 'profile.bio' in the reducer.",["260"],"'isEmpty' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"269","text":"270"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"271","text":"272"},"Update the dependencies array to be: [getProfiles, profiles]",{"range":"273","text":"274"},"Update the dependencies array to be: [loading, getProfile, profile.bio, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.social]",{"range":"275","text":"276"},[491,493],"[getPost, match.params.id]",[633,649],"[getProfileById, match.params.id]",[487,500],"[getProfiles, profiles]",[2176,2196],"[loading, getProfile, profile.bio, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.social]"]